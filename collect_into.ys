# Anda√ß Berkay Seval 2235521

.pos 0
init:
	irmovq stack, %rsp
	call main
	halt

.pos 0x200
root:
	.quad 17
	.quad node6
	.quad node24
node6:
	.quad 6
	.quad node4
	.quad node11
node4:
	.quad 4
	.quad node3
	.quad node5
node3:
	.quad 3
	.quad 0
	.quad 0
node5:
	.quad 5
	.quad 0
	.quad 0
node11:
	.quad 11
	.quad node8
	.quad 0
node8:
	.quad 8
	.quad 0
	.quad 0
node24:
	.quad 24
	.quad node19
	.quad node40
node19:
	.quad 19
	.quad 0
	.quad 0
node40:
	.quad 40
	.quad 0
	.quad node52
node52:
	.quad 52
	.quad 0
	.quad 0

.pos 0x400
array:
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
main:
	irmovq root, %rdi
	irmovq array, %rsi
	irmovq $8, %rdx
	call collect_into
	ret

collect_into:
	andq %rdi, %rdi
	je return
	andq %rdx, %rdx
	jle return
body:
	pushq %rbx
	pushq %r13
	pushq %r14
	pushq %r11
	pushq %r12
	irmovq $1, %r12
	rrmovq %rdi, %rbx
	rrmovq %rsi, %r13
	rrmovq %rdx, %r14
	mrmovq 8(%rdi), %rdi
	call collect_into
	rrmovq %rax, %rcx
	rrmovq %rax, %r11
	subq %r14, %rcx
	je return2
	mrmovq (%rbx), %rcx
	addq %rax, %rax
	addq %rax, %rax
	addq %rax, %rax
	addq %rax, %r13
	rmmovq %rcx, (%r13)
	mrmovq 16(%rbx), %rdi
	addq %r14, %r13
	rrmovq %r13, %rsi
	subq %r11, %r14
	subq %r12, %r14
	rrmovq %r14, %rdx
	call collect_into
	addq %r11, %rax
	addq %r12, %rax
	popq %r12
	popq %r11
	popq %r14
	popq %r13
	popq %rbx
	ret
return2:
	popq %r12
	popq %r11
	popq %r14
	popq %r13
	popq %rbx
	ret
return:
	irmovq $0, %rax
	ret

.pos 0x800
stack:
	


